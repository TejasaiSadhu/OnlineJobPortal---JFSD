{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:80/freelancer';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Add freelancer\nexport const addFreelancer = async freelancer => {\n  try {\n    console.log('Add Freelancer Method');\n    const response = await axios.post(`${baseUrl}/add`, freelancer, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get freelancer by ID\nexport const getById = async id => {\n  try {\n    console.log('Get Freelancer by Id');\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get freelancer by username\nexport const getByUserName = async userName => {\n  try {\n    console.log('Get Freelancer by Name');\n    const response = await axios.get(`${baseUrl}/get/name/${userName}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Update freelancer details\nexport const updateFreelancer = async (id, freelancer) => {\n  try {\n    console.log('Update Freelancer Details');\n    const response = await axios.put(`${baseUrl}/update/${id}`, freelancer, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// List all freelancers\nexport const listAll = async () => {\n  try {\n    console.log('List Freelancers');\n    const response = await axios.get(`${baseUrl}/listAll`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Freelancer class for TypeScript (if using)\nexport class Freelancer {\n  constructor(userName, firstName, lastName, password) {\n    this.userName = userName;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.password = password;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","addFreelancer","freelancer","console","log","response","post","headers","data","error","getById","id","get","getByUserName","userName","updateFreelancer","put","listAll","Freelancer","constructor","firstName","lastName","password"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/FreelancerService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:80/freelancer';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Add freelancer\r\nexport const addFreelancer = async (freelancer) => {\r\n  try {\r\n    console.log('Add Freelancer Method');\r\n    const response = await axios.post(`${baseUrl}/add`, freelancer, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get freelancer by ID\r\nexport const getById = async (id) => {\r\n  try {\r\n    console.log('Get Freelancer by Id');\r\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get freelancer by username\r\nexport const getByUserName = async (userName) => {\r\n  try {\r\n    console.log('Get Freelancer by Name');\r\n    const response = await axios.get(`${baseUrl}/get/name/${userName}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update freelancer details\r\nexport const updateFreelancer = async (id, freelancer) => {\r\n  try {\r\n    console.log('Update Freelancer Details');\r\n    const response = await axios.put(`${baseUrl}/update/${id}`, freelancer, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// List all freelancers\r\nexport const listAll = async () => {\r\n  try {\r\n    console.log('List Freelancers');\r\n    const response = await axios.get(`${baseUrl}/listAll`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Freelancer class for TypeScript (if using)\r\nexport class Freelancer {\r\n  constructor(userName, firstName, lastName, password) {\r\n    this.userName = userName;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.password = password;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}