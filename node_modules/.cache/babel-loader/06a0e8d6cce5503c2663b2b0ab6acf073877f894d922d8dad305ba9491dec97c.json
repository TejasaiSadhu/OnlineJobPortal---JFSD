{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8080/jobApplication';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Apply to job\nexport const applyToJob = async jobApplication => {\n  try {\n    console.log('Apply to Job Method');\n    const response = await axios.post(`${baseUrl}/apply`, jobApplication, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Find all applications\nexport const findAll = async () => {\n  try {\n    console.log('Find All Applications Method');\n    const response = await axios.get(`${baseUrl}/findAll`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Withdraw application\nexport const withdrawApplication = async id => {\n  try {\n    console.log('Withdraw Job Application');\n    const response = await axios.delete(`${baseUrl}/delete/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Update application\nexport const updateApplication = async (id, jobApplication) => {\n  try {\n    console.log('Update Job Application');\n    const response = await axios.put(`${baseUrl}/update/${id}`, jobApplication, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get all applicants for a job\nexport const getAllApplicants = async jobId => {\n  try {\n    console.log('Find Applications for a Job method');\n    const response = await axios.get(`${baseUrl}/findAll/job/${jobId}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Find application by freelancer ID\nexport const findByFreelancerId = async (jobId, freelancerId) => {\n  try {\n    console.log('Find Applications for a Job method');\n    const response = await axios.get(`${baseUrl}/findByFrId/job/${jobId}/frId/${freelancerId}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// JobApplication class for TypeScript (if using)\nexport class JobApplication {\n  constructor(jobId, coverLetter, freelancerId) {\n    this.jobId = jobId;\n    this.coverLetter = coverLetter;\n    this.freelancerId = freelancerId;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","applyToJob","jobApplication","console","log","response","post","headers","data","error","findAll","get","withdrawApplication","id","delete","updateApplication","put","getAllApplicants","jobId","findByFreelancerId","freelancerId","JobApplication","constructor","coverLetter"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/JobApplicationService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/jobApplication';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Apply to job\r\nexport const applyToJob = async (jobApplication) => {\r\n  try {\r\n    console.log('Apply to Job Method');\r\n    const response = await axios.post(`${baseUrl}/apply`, jobApplication, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Find all applications\r\nexport const findAll = async () => {\r\n  try {\r\n    console.log('Find All Applications Method');\r\n    const response = await axios.get(`${baseUrl}/findAll`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Withdraw application\r\nexport const withdrawApplication = async (id) => {\r\n  try {\r\n    console.log('Withdraw Job Application');\r\n    const response = await axios.delete(`${baseUrl}/delete/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update application\r\nexport const updateApplication = async (id, jobApplication) => {\r\n  try {\r\n    console.log('Update Job Application');\r\n    const response = await axios.put(`${baseUrl}/update/${id}`, jobApplication, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all applicants for a job\r\nexport const getAllApplicants = async (jobId) => {\r\n  try {\r\n    console.log('Find Applications for a Job method');\r\n    const response = await axios.get(`${baseUrl}/findAll/job/${jobId}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Find application by freelancer ID\r\nexport const findByFreelancerId = async (jobId, freelancerId) => {\r\n  try {\r\n    console.log('Find Applications for a Job method');\r\n    const response = await axios.get(`${baseUrl}/findByFrId/job/${jobId}/frId/${freelancerId}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// JobApplication class for TypeScript (if using)\r\nexport class JobApplication {\r\n  constructor(jobId, coverLetter, freelancerId) {\r\n    this.jobId = jobId;\r\n    this.coverLetter = coverLetter;\r\n    this.freelancerId = freelancerId;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}