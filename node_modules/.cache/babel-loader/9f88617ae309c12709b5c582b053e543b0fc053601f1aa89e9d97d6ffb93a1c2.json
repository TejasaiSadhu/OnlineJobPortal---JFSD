{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8080/admin';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Get admin by ID\nexport const findById = async id => {\n  try {\n    console.log('Find Admin by ID method');\n    const response = await axios.get(`${baseUrl}/find/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get admin by name\nexport const findByName = async name => {\n  try {\n    console.log('Find Admin by userName method');\n    const response = await axios.get(`${baseUrl}/find/name/${name}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Add admin\nexport const addAdmin = async admin => {\n  try {\n    console.log('Add Admin Method');\n    const response = await axios.post(`${baseUrl}/save`, admin, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Update admin\nexport const updateAdmin = async (id, admin) => {\n  try {\n    console.log('Update Admin Method');\n    const response = await axios.put(`${baseUrl}/update/${id}`, admin, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Admin class for TypeScript (if using)\nexport class Admin {\n  constructor(userName, firstName, lastName, password) {\n    this.userName = userName;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.password = password;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","findById","id","console","log","response","get","headers","data","error","findByName","name","addAdmin","admin","post","updateAdmin","put","Admin","constructor","userName","firstName","lastName","password"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/AdminService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/admin';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Get admin by ID\r\nexport const findById = async (id) => {\r\n  try {\r\n    console.log('Find Admin by ID method');\r\n    const response = await axios.get(`${baseUrl}/find/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get admin by name\r\nexport const findByName = async (name) => {\r\n  try {\r\n    console.log('Find Admin by userName method');\r\n    const response = await axios.get(`${baseUrl}/find/name/${name}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add admin\r\nexport const addAdmin = async (admin) => {\r\n  try {\r\n    console.log('Add Admin Method');\r\n    const response = await axios.post(`${baseUrl}/save`, admin, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update admin\r\nexport const updateAdmin = async (id, admin) => {\r\n  try {\r\n    console.log('Update Admin Method');\r\n    const response = await axios.put(`${baseUrl}/update/${id}`, admin, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Admin class for TypeScript (if using)\r\nexport class Admin {\r\n  constructor(userName, firstName, lastName, password) {\r\n    this.userName = userName;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.password = password;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B;;AAE7C;AACA,MAAMC,aAAa,GAAGA,CAAA,MAAO;EAC3B,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,EAAE,IAAK;EACpC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,YAAYG,EAAE,EAAE,EAAE;MAAEK,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IAC1F,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,cAAcY,IAAI,EAAE,EAAE;MAAEJ,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IAC9F,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACFV,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAI,CAAC,GAAGf,OAAO,OAAO,EAAEc,KAAK,EAAE;MAAEN,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IACzF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOb,EAAE,EAAEW,KAAK,KAAK;EAC9C,IAAI;IACFV,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,WAAWG,EAAE,EAAE,EAAEW,KAAK,EAAE;MAAEN,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IAChG,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,KAAK,CAAC;EACjBC,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACnD,IAAI,CAACH,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}