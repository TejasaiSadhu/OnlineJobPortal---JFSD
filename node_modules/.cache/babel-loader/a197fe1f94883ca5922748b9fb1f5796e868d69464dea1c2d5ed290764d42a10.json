{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\Portal\\\\Portal React\\\\online-job-portal\\\\src\\\\modules\\\\Recruiter\\\\Job\\\\FindJobBySkill\\\\FindJobBySkill.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { findJobsBySkill } from '../../../../services/JobService'; // Adjust path as needed\nimport './FindJobBySkill.css'; // Import external CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindJobBySkill = () => {\n  _s();\n  const {\n    skill\n  } = useParams(); // Get skill from route params\n  const [jobsList, setJobsList] = useState([]); // State to store list of jobs\n  const [skillName, setSkillName] = useState(''); // State to store skill name\n  const [loading, setLoading] = useState(true); // State to handle loading\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    // Fetch jobs based on skill when component mounts\n    const fetchJobs = async () => {\n      try {\n        const response = await findJobsBySkill(skill); // Fetch jobs by skill\n        setJobsList(response); // Update jobsList state with fetched data\n        setSkillName(skill); // Update skillName state\n      } catch (err) {\n        setError(err.message); // Handle errors\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched\n      }\n    };\n    fetchJobs();\n  }, [skill]); // Dependency array to re-run effect if skill changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Loading state with styling\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // Error state with styling\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-skill-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"skill-heading\",\n        children: [\"List of Jobs by Skill: \", skillName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"job-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: jobsList.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, job.jobId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FindJobBySkill, \"vj+ZWJ7b6jSMn8nGFynxGDXEtvU=\", false, function () {\n  return [useParams];\n});\n_c = FindJobBySkill;\nexport default FindJobBySkill;\nvar _c;\n$RefreshReg$(_c, \"FindJobBySkill\");","map":{"version":3,"names":["React","useEffect","useState","useParams","findJobsBySkill","jsxDEV","_jsxDEV","FindJobBySkill","_s","skill","jobsList","setJobsList","skillName","setSkillName","loading","setLoading","error","setError","fetchJobs","response","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","jobId","jobTitle","jobDescription","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/modules/Recruiter/Job/FindJobBySkill/FindJobBySkill.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { findJobsBySkill } from '../../../../services/JobService'; // Adjust path as needed\r\nimport './FindJobBySkill.css'; // Import external CSS for styling\r\n\r\nconst FindJobBySkill = () => {\r\n  const { skill } = useParams(); // Get skill from route params\r\n  const [jobsList, setJobsList] = useState([]); // State to store list of jobs\r\n  const [skillName, setSkillName] = useState(''); // State to store skill name\r\n  const [loading, setLoading] = useState(true); // State to handle loading\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  useEffect(() => {\r\n    // Fetch jobs based on skill when component mounts\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await findJobsBySkill(skill); // Fetch jobs by skill\r\n        setJobsList(response); // Update jobsList state with fetched data\r\n        setSkillName(skill); // Update skillName state\r\n      } catch (err) {\r\n        setError(err.message); // Handle errors\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [skill]); // Dependency array to re-run effect if skill changes\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>; // Loading state with styling\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">Error: {error}</div>; // Error state with styling\r\n  }\r\n\r\n  return (\r\n    <div className=\"job-skill-container\">\r\n      <div className=\"job-card\">\r\n        <h5 className=\"skill-heading\">List of Jobs by Skill: {skillName}</h5>\r\n        <div className=\"job-card-body\">\r\n          <table className=\"job-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job Code</th>\r\n                <th>Job Title</th>\r\n                <th>Job Description</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jobsList.map((job) => (\r\n                <tr key={job.jobId}>\r\n                  <td>{job.jobId}</td>\r\n                  <td>{job.jobTitle}</td>\r\n                  <td>{job.jobDescription}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindJobBySkill;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}