{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8080/recruiter';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Add a new recruiter\nexport const addRecruiter = async recruiter => {\n  try {\n    console.log('Create new Recruiter');\n    const response = await axios.post(`${baseUrl}/add`, recruiter, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get recruiter by ID\nexport const getById = async id => {\n  try {\n    console.log('Get Recruiter by Id');\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get recruiter by name\nexport const getByName = async name => {\n  try {\n    console.log('Get Recruiter by Name');\n    const response = await axios.get(`${baseUrl}/get/name/${name}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Update recruiter details\nexport const updateRecruiter = async (id, recruiter) => {\n  try {\n    console.log('Update Recruiter');\n    const response = await axios.put(`${baseUrl}/update/${id}`, recruiter, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Find all recruiters\nexport const findAll = async () => {\n  try {\n    console.log('Find all Recruiters');\n    const response = await axios.get(`${baseUrl}/getAll`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Recruiter class for TypeScript (if using)\nexport class Recruiter {\n  constructor(userName, firstName, lastName, password) {\n    this.userName = userName;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.password = password;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","addRecruiter","recruiter","console","log","response","post","headers","data","error","getById","id","get","getByName","name","updateRecruiter","put","findAll","Recruiter","constructor","userName","firstName","lastName","password"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/RecruiterService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/recruiter';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Add a new recruiter\r\nexport const addRecruiter = async (recruiter) => {\r\n  try {\r\n    console.log('Create new Recruiter');\r\n    const response = await axios.post(`${baseUrl}/add`, recruiter, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get recruiter by ID\r\nexport const getById = async (id) => {\r\n  try {\r\n    console.log('Get Recruiter by Id');\r\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get recruiter by name\r\nexport const getByName = async (name) => {\r\n  try {\r\n    console.log('Get Recruiter by Name');\r\n    const response = await axios.get(`${baseUrl}/get/name/${name}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update recruiter details\r\nexport const updateRecruiter = async (id, recruiter) => {\r\n  try {\r\n    console.log('Update Recruiter');\r\n    const response = await axios.put(`${baseUrl}/update/${id}`, recruiter, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Find all recruiters\r\nexport const findAll = async () => {\r\n  try {\r\n    console.log('Find all Recruiters');\r\n    const response = await axios.get(`${baseUrl}/getAll`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Recruiter class for TypeScript (if using)\r\nexport class Recruiter {\r\n  constructor(userName, firstName, lastName, password) {\r\n    this.userName = userName;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.password = password;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}