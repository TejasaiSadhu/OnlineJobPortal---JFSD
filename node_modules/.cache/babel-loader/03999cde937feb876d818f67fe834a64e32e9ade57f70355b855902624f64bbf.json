{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\Portal\\\\Portal React\\\\online-job-portal\\\\src\\\\modules\\\\Recruiter\\\\Job\\\\FindJobBySkill\\\\FindJobBySkill.js\",\n  _s = $RefreshSig$();\n// src/modules/Job/FindJobBySkill.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // To handle route parameters\nimport JobService from '../../../../services/JobService'; // Adjust path based on your structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindJobBySkill = () => {\n  _s();\n  const {\n    skill\n  } = useParams(); // Get skill from route params\n  const [jobsList, setJobsList] = useState([]); // State to store list of jobs\n  const [skillName, setSkillName] = useState(''); // State to store skill name\n  const [loading, setLoading] = useState(true); // State to handle loading\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    // Fetch jobs based on skill when component mounts\n    const fetchJobs = async () => {\n      try {\n        const response = await JobService.findJobsBySkill(skill); // Fetch jobs by skill\n        setJobsList(response.data); // Update jobsList state with fetched data\n        setSkillName(skill); // Update skillName state\n      } catch (err) {\n        setError(err.message); // Handle errors\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched\n      }\n    };\n    fetchJobs();\n  }, [skill]); // Dependency array to re-run effect if skill changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this); // Loading state\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this); // Error state\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"List of Jobs by Skill: \", skillName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-primary table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Job Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Job Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Job Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: jobsList.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: job.jobId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: job.jobTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: job.jobDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)]\n                }, job.jobId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(FindJobBySkill, \"vj+ZWJ7b6jSMn8nGFynxGDXEtvU=\", false, function () {\n  return [useParams];\n});\n_c = FindJobBySkill;\nexport default FindJobBySkill;\nvar _c;\n$RefreshReg$(_c, \"FindJobBySkill\");","map":{"version":3,"names":["React","useEffect","useState","useParams","JobService","jsxDEV","_jsxDEV","FindJobBySkill","_s","skill","jobsList","setJobsList","skillName","setSkillName","loading","setLoading","error","setError","fetchJobs","response","findJobsBySkill","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","job","jobId","jobTitle","jobDescription","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/modules/Recruiter/Job/FindJobBySkill/FindJobBySkill.js"],"sourcesContent":["// src/modules/Job/FindJobBySkill.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'; // To handle route parameters\r\nimport JobService from '../../../../services/JobService'; // Adjust path based on your structure\r\n\r\nconst FindJobBySkill = () => {\r\n  const { skill } = useParams(); // Get skill from route params\r\n  const [jobsList, setJobsList] = useState([]); // State to store list of jobs\r\n  const [skillName, setSkillName] = useState(''); // State to store skill name\r\n  const [loading, setLoading] = useState(true); // State to handle loading\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  useEffect(() => {\r\n    // Fetch jobs based on skill when component mounts\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await JobService.findJobsBySkill(skill); // Fetch jobs by skill\r\n        setJobsList(response.data); // Update jobsList state with fetched data\r\n        setSkillName(skill); // Update skillName state\r\n      } catch (err) {\r\n        setError(err.message); // Handle errors\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [skill]); // Dependency array to re-run effect if skill changes\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>; // Loading state\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>; // Error state\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid overflow-hidden\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-6 text-center\">\r\n          <div className=\"card\">\r\n            <h5>List of Jobs by Skill: {skillName}</h5>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-striped table-primary table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Job Code</th>\r\n                    <th>Job Title</th>\r\n                    <th>Job Description</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {jobsList.map((job) => (\r\n                    <tr key={job.jobId}>\r\n                      <td>{job.jobId}</td>\r\n                      <td>{job.jobTitle}</td>\r\n                      <td>{job.jobDescription}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindJobBySkill;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}