{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8080/skillExperience';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Add skill experience\nexport const addExperience = async skillExp => {\n  try {\n    console.log('Add Skill Experience');\n    const response = await axios.post(`${baseUrl}/add`, skillExp, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get experience by ID\nexport const getExperienceById = async id => {\n  try {\n    console.log('Get Experience by Id');\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Update skill experience\nexport const updateSkillExp = async (id, freelancerId, years) => {\n  try {\n    console.log('Update Experience');\n    const response = await axios.put(`${baseUrl}/update/freelancer/${freelancerId}/skill/${id}?years=${years}`, null, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get all skills by freelancer\nexport const getAllSkills = async id => {\n  try {\n    console.log('Get All Skills By Freelancer Method');\n    const response = await axios.get(`${baseUrl}/getAll/freelancer/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// SkillExperience class for TypeScript (if using)\nexport class SkillExperience {\n  constructor(years, skillId, freelancerId) {\n    this.years = years;\n    this.skillId = skillId;\n    this.freelancerId = freelancerId;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","addExperience","skillExp","console","log","response","post","headers","data","error","getExperienceById","id","get","updateSkillExp","freelancerId","years","put","getAllSkills","SkillExperience","constructor","skillId"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/SkillExperienceService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/skillExperience';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Add skill experience\r\nexport const addExperience = async (skillExp) => {\r\n  try {\r\n    console.log('Add Skill Experience');\r\n    const response = await axios.post(`${baseUrl}/add`, skillExp, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get experience by ID\r\nexport const getExperienceById = async (id) => {\r\n  try {\r\n    console.log('Get Experience by Id');\r\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update skill experience\r\nexport const updateSkillExp = async (id, freelancerId, years) => {\r\n  try {\r\n    console.log('Update Experience');\r\n    const response = await axios.put(`${baseUrl}/update/freelancer/${freelancerId}/skill/${id}?years=${years}`, null, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all skills by freelancer\r\nexport const getAllSkills = async (id) => {\r\n  try {\r\n    console.log('Get All Skills By Freelancer Method');\r\n    const response = await axios.get(`${baseUrl}/getAll/freelancer/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// SkillExperience class for TypeScript (if using)\r\nexport class SkillExperience {\r\n  constructor(years, skillId, freelancerId) {\r\n    this.years = years;\r\n    this.skillId = skillId;\r\n    this.freelancerId = freelancerId;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uCAAuC;;AAEvD;AACA,MAAMC,aAAa,GAAGA,CAAA,MAAO;EAC3B,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,MAAM,EAAEG,QAAQ,EAAE;MAAEK,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IAC3F,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC7C,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,WAAWY,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IACzF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAOF,EAAE,EAAEG,YAAY,EAAEC,KAAK,KAAK;EAC/D,IAAI;IACFZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,sBAAsBe,YAAY,UAAUH,EAAE,UAAUI,KAAK,EAAE,EAAE,IAAI,EAAE;MAAER,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IAC/I,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAG,MAAON,EAAE,IAAK;EACxC,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,sBAAsBY,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IACpG,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,eAAe,CAAC;EAC3BC,WAAWA,CAACJ,KAAK,EAAEK,OAAO,EAAEN,YAAY,EAAE;IACxC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACK,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACN,YAAY,GAAGA,YAAY;EAClC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}