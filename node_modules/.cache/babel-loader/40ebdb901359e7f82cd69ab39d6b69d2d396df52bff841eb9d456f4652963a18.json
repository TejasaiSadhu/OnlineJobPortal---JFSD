{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama Teja\\\\Dropbox\\\\PC\\\\Desktop\\\\Portal\\\\Portal React\\\\online-job-portal\\\\src\\\\modules\\\\Recruiter\\\\Job\\\\ListApplicants\\\\ListApplicants.js\",\n  _s = $RefreshSig$();\n// src/modules/Recruiter/Job/ListApplicants/ListApplicants.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport * as JobService from '../../../../services/JobService'; // Use named import\nimport * as JobApplicationService from '../../../../services/JobApplicationService'; // Use named import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListApplicants = () => {\n  _s();\n  const {\n    jobId\n  } = useParams(); // Get jobId from URL parameters\n  const [applicantsList, setApplicantsList] = useState([]); // State to store list of applicants\n  const navigate = useNavigate(); // Hook for navigation\n\n  useEffect(() => {\n    // Fetch applicants for the given job ID\n    const fetchApplicants = async () => {\n      try {\n        const response = await JobApplicationService.getAllApplicants(jobId); // Fetch applicants\n        setApplicantsList(response); // Update state with fetched data\n      } catch (err) {\n        alert(err.message); // Handle errors\n      }\n    };\n    fetchApplicants();\n  }, [jobId]);\n\n  // Function to award a job to a freelancer\n  const awardJob = async (jobId, freelancerId) => {\n    try {\n      await JobService.awardJob(jobId, freelancerId); // Call service to award job\n      alert('Job Awarded successfully');\n      navigate('../list'); // Navigate to list view\n    } catch (err) {\n      console.log(err.message); // Handle errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: \"List of Job Applicants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-hover table-striped table-success\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Full Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"UserId\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"2\",\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: applicantsList.map((applicant, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: applicant.freelancerName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: applicant.freelancerUName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-outline-success\",\n                      onClick: () => awardJob(applicant.jobId, applicant.freelancerId),\n                      children: \"Award Job\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)]\n                }, applicant.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ListApplicants, \"x922AyENgoliinJy9Vyzel0bopg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ListApplicants;\nexport default ListApplicants;\nvar _c;\n$RefreshReg$(_c, \"ListApplicants\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","JobService","JobApplicationService","jsxDEV","_jsxDEV","ListApplicants","_s","jobId","applicantsList","setApplicantsList","navigate","fetchApplicants","response","getAllApplicants","err","alert","message","awardJob","freelancerId","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","map","applicant","index","freelancerName","freelancerUName","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/modules/Recruiter/Job/ListApplicants/ListApplicants.js"],"sourcesContent":["// src/modules/Recruiter/Job/ListApplicants/ListApplicants.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport * as JobService from '../../../../services/JobService'; // Use named import\r\nimport * as JobApplicationService from '../../../../services/JobApplicationService'; // Use named import\r\n\r\nconst ListApplicants = () => {\r\n  const { jobId } = useParams(); // Get jobId from URL parameters\r\n  const [applicantsList, setApplicantsList] = useState([]); // State to store list of applicants\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  useEffect(() => {\r\n    // Fetch applicants for the given job ID\r\n    const fetchApplicants = async () => {\r\n      try {\r\n        const response = await JobApplicationService.getAllApplicants(jobId); // Fetch applicants\r\n        setApplicantsList(response); // Update state with fetched data\r\n      } catch (err) {\r\n        alert(err.message); // Handle errors\r\n      }\r\n    };\r\n\r\n    fetchApplicants();\r\n  }, [jobId]);\r\n\r\n  // Function to award a job to a freelancer\r\n  const awardJob = async (jobId, freelancerId) => {\r\n    try {\r\n      await JobService.awardJob(jobId, freelancerId); // Call service to award job\r\n      alert('Job Awarded successfully');\r\n      navigate('../list'); // Navigate to list view\r\n    } catch (err) {\r\n      console.log(err.message); // Handle errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-6\">\r\n          <div className=\"card\">\r\n            <h4 className=\"card-title\">List of Job Applicants</h4>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-hover table-striped table-success\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Full Name</th>\r\n                    <th>UserId</th>\r\n                    <th colSpan=\"2\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {applicantsList.map((applicant, index) => (\r\n                    <tr key={applicant.id}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{applicant.freelancerName}</td>\r\n                      <td>{applicant.freelancerUName}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success\"\r\n                          onClick={() => awardJob(applicant.jobId, applicant.freelancerId)}\r\n                        >\r\n                          Award Job\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListApplicants;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}