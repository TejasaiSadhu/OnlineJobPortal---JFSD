{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8080/bmark/freelancer';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Add bookmark freelancer\nexport const addBookmarkFreelancer = async bMark => {\n  try {\n    console.log('Add bookmark Freelancer method');\n    const response = await axios.post(`${baseUrl}/add`, bMark, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Delete bookmark freelancer\nexport const deleteBookmarkFreelancer = async id => {\n  try {\n    console.log('Delete bookmark Freelancer method');\n    const response = await axios.delete(`${baseUrl}/delete/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get bookmarked freelancer by ID\nexport const getBookmarkedFreelancerById = async id => {\n  try {\n    console.log('Get Bookmarked Freelancer By Id');\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get all bookmarked freelancers\nexport const getAllBookmarks = async () => {\n  try {\n    console.log('Get all Bookmarked Freelancers');\n    const response = await axios.get(`${baseUrl}/getAll`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// BookmarkFreelancer class for TypeScript (if using)\nexport class BookmarkFreelancer {\n  constructor(recruiterId, freelancerId) {\n    this.recruiterId = recruiterId;\n    this.freelancerId = freelancerId;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","addBookmarkFreelancer","bMark","console","log","response","post","headers","data","error","deleteBookmarkFreelancer","id","delete","getBookmarkedFreelancerById","get","getAllBookmarks","BookmarkFreelancer","constructor","recruiterId","freelancerId"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/BookmarkedFreelancerService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/bmark/freelancer';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Add bookmark freelancer\r\nexport const addBookmarkFreelancer = async (bMark) => {\r\n  try {\r\n    console.log('Add bookmark Freelancer method');\r\n    const response = await axios.post(`${baseUrl}/add`, bMark, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete bookmark freelancer\r\nexport const deleteBookmarkFreelancer = async (id) => {\r\n  try {\r\n    console.log('Delete bookmark Freelancer method');\r\n    const response = await axios.delete(`${baseUrl}/delete/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get bookmarked freelancer by ID\r\nexport const getBookmarkedFreelancerById = async (id) => {\r\n  try {\r\n    console.log('Get Bookmarked Freelancer By Id');\r\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all bookmarked freelancers\r\nexport const getAllBookmarks = async () => {\r\n  try {\r\n    console.log('Get all Bookmarked Freelancers');\r\n    const response = await axios.get(`${baseUrl}/getAll`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// BookmarkFreelancer class for TypeScript (if using)\r\nexport class BookmarkFreelancer {\r\n  constructor(recruiterId, freelancerId) {\r\n    this.recruiterId = recruiterId;\r\n    this.freelancerId = freelancerId;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wCAAwC;;AAExD;AACA,MAAMC,aAAa,GAAGA,CAAA,MAAO;EAC3B,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,KAAK,IAAK;EACpD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,MAAM,EAAEG,KAAK,EAAE;MAAEK,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IACxF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,wBAAwB,GAAG,MAAOC,EAAE,IAAK;EACpD,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACc,MAAM,CAAC,GAAGb,OAAO,WAAWY,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IAC5F,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,2BAA2B,GAAG,MAAOF,EAAE,IAAK;EACvD,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,WAAWY,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IACzF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACFZ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,SAAS,EAAE;MAAEQ,OAAO,EAAEP,aAAa,CAAC;IAAE,CAAC,CAAC;IACnF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,kBAAkB,CAAC;EAC9BC,WAAWA,CAACC,WAAW,EAAEC,YAAY,EAAE;IACrC,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}