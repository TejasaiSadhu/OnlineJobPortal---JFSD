{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEJA SAI\\\\Desktop\\\\Jfsd project\\\\Portal React\\\\online-job-portal\\\\src\\\\modules\\\\Recruiter\\\\Job\\\\ListAllJobs\\\\ListAllJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAllJobs, closeJob } from '../../../../services/JobService'; // Adjust path as needed\nimport './ListAllJobs.css'; // Import external CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListAllJobs = () => {\n  _s();\n  const [jobsList, setJobsList] = useState([]); // State to store list of jobs\n  const [recruiterName, setRecruiterName] = useState(''); // State to store recruiter name\n  const navigate = useNavigate(); // Hook for navigation\n\n  useEffect(() => {\n    // Fetch all jobs when the component mounts\n    const fetchJobs = async () => {\n      try {\n        const response = await getAllJobs(); // Fetch jobs\n        setJobsList(response); // Update state with fetched data\n        setRecruiterName(localStorage.getItem('recruiterUName') || ''); // Set recruiter name from localStorage\n      } catch (err) {\n        alert(err.message); // Handle errors\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleCloseJob = async jobId => {\n    try {\n      await closeJob(jobId); // Close job\n      alert('Job closed successfully');\n      setJobsList(prevJobs => prevJobs.filter(job => job.jobId !== jobId)); // Remove job from list\n    } catch (err) {\n      alert(err.message); // Handle errors\n    }\n  };\n  const handleViewApplications = jobId => {\n    navigate(`/viewApps/${jobId}`); // Navigate to view applications\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"List of Jobs posted by \", recruiterName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-list-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Skill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"2\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: jobsList.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.skillName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-close-job\",\n                  onClick: () => handleCloseJob(job.jobId),\n                  disabled: !job.jobStatus,\n                  children: \"Close Job\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-view-applications\",\n                  onClick: () => handleViewApplications(job.jobId),\n                  disabled: !job.jobStatus,\n                  children: \"View Applications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, job.jobId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ListAllJobs, \"9LaEJzdPvvVvZlqXdaEtkx+hGAM=\", false, function () {\n  return [useNavigate];\n});\n_c = ListAllJobs;\nexport default ListAllJobs;\nvar _c;\n$RefreshReg$(_c, \"ListAllJobs\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getAllJobs","closeJob","jsxDEV","_jsxDEV","ListAllJobs","_s","jobsList","setJobsList","recruiterName","setRecruiterName","navigate","fetchJobs","response","localStorage","getItem","err","alert","message","handleCloseJob","jobId","prevJobs","filter","job","handleViewApplications","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","map","jobTitle","jobDescription","skillName","onClick","disabled","jobStatus","_c","$RefreshReg$"],"sources":["C:/Users/TEJA SAI/Desktop/Jfsd project/Portal React/online-job-portal/src/modules/Recruiter/Job/ListAllJobs/ListAllJobs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAllJobs, closeJob } from '../../../../services/JobService'; // Adjust path as needed\r\nimport './ListAllJobs.css'; // Import external CSS for styling\r\n\r\nconst ListAllJobs = () => {\r\n  const [jobsList, setJobsList] = useState([]); // State to store list of jobs\r\n  const [recruiterName, setRecruiterName] = useState(''); // State to store recruiter name\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  useEffect(() => {\r\n    // Fetch all jobs when the component mounts\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await getAllJobs(); // Fetch jobs\r\n        setJobsList(response); // Update state with fetched data\r\n        setRecruiterName(localStorage.getItem('recruiterUName') || ''); // Set recruiter name from localStorage\r\n      } catch (err) {\r\n        alert(err.message); // Handle errors\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleCloseJob = async (jobId) => {\r\n    try {\r\n      await closeJob(jobId); // Close job\r\n      alert('Job closed successfully');\r\n      setJobsList((prevJobs) => prevJobs.filter((job) => job.jobId !== jobId)); // Remove job from list\r\n    } catch (err) {\r\n      alert(err.message); // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleViewApplications = (jobId) => {\r\n    navigate(`/viewApps/${jobId}`); // Navigate to view applications\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-list-container\">\r\n      <div className=\"job-list-header\">\r\n        <h4>List of Jobs posted by {recruiterName}</h4>\r\n      </div>\r\n      <div className=\"job-list-content\">\r\n        <div className=\"job-list-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Job Code</th>\r\n                <th>Job Title</th>\r\n                <th>Job Description</th>\r\n                <th>Skill</th>\r\n                <th colSpan=\"2\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jobsList.map((job) => (\r\n                <tr key={job.jobId}>\r\n                  <td>{job.jobId}</td>\r\n                  <td>{job.jobTitle}</td>\r\n                  <td>{job.jobDescription}</td>\r\n                  <td>{job.skillName}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn-close-job\"\r\n                      onClick={() => handleCloseJob(job.jobId)}\r\n                      disabled={!job.jobStatus}\r\n                    >\r\n                      Close Job\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn-view-applications\"\r\n                      onClick={() => handleViewApplications(job.jobId)}\r\n                      disabled={!job.jobStatus}\r\n                    >\r\n                      View Applications\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAllJobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}