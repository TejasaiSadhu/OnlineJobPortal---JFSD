{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEJA SAI\\\\Desktop\\\\Jfsd project\\\\Portal React\\\\online-job-portal\\\\src\\\\modules\\\\Recruiter\\\\Job\\\\AddJob\\\\AddJob.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as JobService from '../../../../services/JobService';\nimport * as SkillService from '../../../../services/SkillService';\nimport './AddJob.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddJob = () => {\n  _s();\n  const [jobTitle, setJobTitle] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [skillId, setSkillId] = useState('');\n  const [skills, setSkills] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch all skills when the component mounts\n    const fetchSkills = async () => {\n      try {\n        const response = await SkillService.getAllSkills();\n        setSkills(response);\n      } catch (error) {\n        alert('Error fetching skills: ' + error.message);\n      }\n    };\n    fetchSkills();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const postJob = {\n      jobTitle,\n      jobDescription,\n      skillId,\n      recruiterId: Number(localStorage.getItem('recruiterId')) // Ensure recruiterId is stored in localStorage\n    };\n    try {\n      await JobService.addJob(postJob);\n      alert('Job posted successfully!');\n      navigate('/jobs');\n    } catch (error) {\n      alert('Error posting job: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-job-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title\",\n      children: \"Create A New Job Opening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"job-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobTitle\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"jobTitle\",\n            value: jobTitle,\n            onChange: e => setJobTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobDescription\",\n            children: \"Job Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"jobDescription\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"skillList\",\n            children: \"Skill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"skillList\",\n            value: skillId,\n            onChange: e => setSkillId(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a skill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), skills.map(skill => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: skill.id,\n              children: skill.name\n            }, skill.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Post Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AddJob, \"UOMh6bI3mXU5+vLONGzsJIrXWbo=\", false, function () {\n  return [useNavigate];\n});\n_c = AddJob;\nexport default AddJob;\nvar _c;\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","JobService","SkillService","jsxDEV","_jsxDEV","AddJob","_s","jobTitle","setJobTitle","jobDescription","setJobDescription","skillId","setSkillId","skills","setSkills","navigate","fetchSkills","response","getAllSkills","error","alert","message","handleSubmit","event","preventDefault","postJob","recruiterId","Number","localStorage","getItem","addJob","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","map","skill","name","_c","$RefreshReg$"],"sources":["C:/Users/TEJA SAI/Desktop/Jfsd project/Portal React/online-job-portal/src/modules/Recruiter/Job/AddJob/AddJob.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as JobService from '../../../../services/JobService';\r\nimport * as SkillService from '../../../../services/SkillService';\r\nimport './AddJob.css'; // Import the CSS file\r\n\r\nconst AddJob = () => {\r\n  const [jobTitle, setJobTitle] = useState('');\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const [skillId, setSkillId] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch all skills when the component mounts\r\n    const fetchSkills = async () => {\r\n      try {\r\n        const response = await SkillService.getAllSkills(); \r\n        setSkills(response);\r\n      } catch (error) {\r\n        alert('Error fetching skills: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchSkills();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const postJob = {\r\n      jobTitle,\r\n      jobDescription,\r\n      skillId,\r\n      recruiterId: Number(localStorage.getItem('recruiterId')), // Ensure recruiterId is stored in localStorage\r\n    };\r\n\r\n    try {\r\n      await JobService.addJob(postJob);\r\n      alert('Job posted successfully!');\r\n      navigate('/jobs');\r\n    } catch (error) {\r\n      alert('Error posting job: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-job-container\">\r\n      <h4 className=\"title\">Create A New Job Opening</h4>\r\n      <div className=\"job-form-container\">\r\n        <form className=\"job-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"jobTitle\">Job Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"jobTitle\"\r\n              value={jobTitle}\r\n              onChange={(e) => setJobTitle(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"jobDescription\">Job Description</label>\r\n            <textarea\r\n              id=\"jobDescription\"\r\n              value={jobDescription}\r\n              onChange={(e) => setJobDescription(e.target.value)}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"skillList\">Skill</label>\r\n            <select\r\n              id=\"skillList\"\r\n              value={skillId}\r\n              onChange={(e) => setSkillId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select a skill</option>\r\n              {skills.map((skill) => (\r\n                <option key={skill.id} value={skill.id}>\r\n                  {skill.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button className=\"submit-button\" type=\"submit\">\r\n            Post Job\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}