{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for the job-related API\nconst baseUrl = 'http://localhost:8080/job';\n\n// Helper function to create headers for API requests\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Add a new job\nexport const addJob = async job => {\n  try {\n    const response = await axios.post(`${baseUrl}/postJob`, job, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding job:', error);\n    throw error;\n  }\n};\n\n// Find jobs by skill name\nexport const findJobsBySkill = async skillName => {\n  try {\n    const response = await axios.get(`${baseUrl}/findJobsBySkill/${skillName}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error finding jobs by skill:', error);\n    throw error;\n  }\n};\n\n// Find a job by its ID\nexport const findJobById = async id => {\n  try {\n    const response = await axios.get(`${baseUrl}/findById/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error finding job by ID:', error);\n    throw error;\n  }\n};\n\n// Close a job by its ID\nexport const closeJob = async id => {\n  try {\n    const response = await axios.get(`${baseUrl}/close/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error closing job:', error);\n    throw error;\n  }\n};\n\n// Get all jobs\nexport const getAllJobs = async () => {\n  try {\n    const response = await axios.get(`${baseUrl}/findAll`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching all jobs:', error);\n    throw error;\n  }\n};\n\n// Award a job to a freelancer\nexport const awardJob = async (jobId, freelancerId) => {\n  try {\n    const response = await axios.put(`${baseUrl}/awardJob/${jobId}/${freelancerId}`, null, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error awarding job:', error);\n    throw error;\n  }\n};\n\n// Get all active jobs\nexport const getAllActive = async () => {\n  try {\n    const response = await axios.get(`${baseUrl}/getAllActive`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching all active jobs:', error);\n    throw error;\n  }\n};\n\n// Job class for TypeScript (if using)\nexport class Job {\n  constructor(freelancerId, skillId, recruiterId, jobTitle, jobDescription) {\n    this.freelancerId = freelancerId;\n    this.skillId = skillId;\n    this.recruiterId = recruiterId;\n    this.jobTitle = jobTitle;\n    this.jobDescription = jobDescription;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","addJob","job","response","post","headers","data","error","console","findJobsBySkill","skillName","get","findJobById","id","closeJob","getAllJobs","awardJob","jobId","freelancerId","put","getAllActive","Job","constructor","skillId","recruiterId","jobTitle","jobDescription"],"sources":["C:/Users/Rama Teja/Dropbox/PC/Desktop/Portal/Portal React/online-job-portal/src/services/JobService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for the job-related API\r\nconst baseUrl = 'http://localhost:8080/job';\r\n\r\n// Helper function to create headers for API requests\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Add a new job\r\nexport const addJob = async (job) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/postJob`, job, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding job:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Find jobs by skill name\r\nexport const findJobsBySkill = async (skillName) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/findJobsBySkill/${skillName}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error finding jobs by skill:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Find a job by its ID\r\nexport const findJobById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/findById/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error finding job by ID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Close a job by its ID\r\nexport const closeJob = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/close/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error closing job:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all jobs\r\nexport const getAllJobs = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/findAll`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching all jobs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Award a job to a freelancer\r\nexport const awardJob = async (jobId, freelancerId) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/awardJob/${jobId}/${freelancerId}`, null, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error awarding job:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all active jobs\r\nexport const getAllActive = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/getAllActive`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching all active jobs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Job class for TypeScript (if using)\r\nexport class Job {\r\n  constructor(freelancerId, skillId, recruiterId, jobTitle, jobDescription) {\r\n    this.freelancerId = freelancerId;\r\n    this.skillId = skillId;\r\n    this.recruiterId = recruiterId;\r\n    this.jobTitle = jobTitle;\r\n    this.jobDescription = jobDescription;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}