{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEJA SAI\\\\Desktop\\\\Jfsd project\\\\Portal React\\\\online-job-portal\\\\src\\\\modules\\\\Recruiter\\\\Job\\\\ListApplicants\\\\ListApplicants.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport * as JobService from '../../../../services/JobService';\nimport * as JobApplicationService from '../../../../services/JobApplicationService';\nimport './ListApplicants.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListApplicants = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const [applicantsList, setApplicantsList] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchApplicants = async () => {\n      try {\n        const response = await JobApplicationService.getAllApplicants(jobId);\n        setApplicantsList(response);\n      } catch (err) {\n        alert(err.message);\n      }\n    };\n    fetchApplicants();\n  }, [jobId]);\n  const awardJob = async (jobId, freelancerId) => {\n    try {\n      await JobService.awardJob(jobId, freelancerId);\n      alert('Job Awarded successfully');\n      navigate('../list');\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-applicants-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title\",\n      children: \"List of Job Applicants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"styled-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"UserId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: applicantsList.map((applicant, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: applicant.freelancerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: applicant.freelancerUName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn award-btn\",\n                onClick: () => awardJob(applicant.jobId, applicant.freelancerId),\n                children: \"Award Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, applicant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ListApplicants, \"x922AyENgoliinJy9Vyzel0bopg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ListApplicants;\nexport default ListApplicants;\nvar _c;\n$RefreshReg$(_c, \"ListApplicants\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","JobService","JobApplicationService","jsxDEV","_jsxDEV","ListApplicants","_s","jobId","applicantsList","setApplicantsList","navigate","fetchApplicants","response","getAllApplicants","err","alert","message","awardJob","freelancerId","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","map","applicant","index","freelancerName","freelancerUName","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/TEJA SAI/Desktop/Jfsd project/Portal React/online-job-portal/src/modules/Recruiter/Job/ListApplicants/ListApplicants.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport * as JobService from '../../../../services/JobService';\r\nimport * as JobApplicationService from '../../../../services/JobApplicationService';\r\nimport './ListApplicants.css'; // Import the CSS file for styles\r\n\r\nconst ListApplicants = () => {\r\n  const { jobId } = useParams();\r\n  const [applicantsList, setApplicantsList] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchApplicants = async () => {\r\n      try {\r\n        const response = await JobApplicationService.getAllApplicants(jobId);\r\n        setApplicantsList(response);\r\n      } catch (err) {\r\n        alert(err.message);\r\n      }\r\n    };\r\n\r\n    fetchApplicants();\r\n  }, [jobId]);\r\n\r\n  const awardJob = async (jobId, freelancerId) => {\r\n    try {\r\n      await JobService.awardJob(jobId, freelancerId);\r\n      alert('Job Awarded successfully');\r\n      navigate('../list');\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-applicants-container\">\r\n      <h4 className=\"title\">List of Job Applicants</h4>\r\n      <div className=\"table-container\">\r\n        <table className=\"styled-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Full Name</th>\r\n              <th>UserId</th>\r\n              <th colSpan=\"2\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {applicantsList.map((applicant, index) => (\r\n              <tr key={applicant.id}>\r\n                <td>{index + 1}</td>\r\n                <td>{applicant.freelancerName}</td>\r\n                <td>{applicant.freelancerUName}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn award-btn\"\r\n                    onClick={() => awardJob(applicant.jobId, applicant.freelancerId)}\r\n                  >\r\n                    Award Job\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListApplicants;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}