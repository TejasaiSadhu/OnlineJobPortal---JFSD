{"ast":null,"code":"// src/services/FreelancerService.js\nimport axios from 'axios';\nconst baseUrl = 'http://localhost:8080/freelancer';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Add freelancer\nexport const addFreelancer = async freelancer => {\n  try {\n    const response = await axios.post(`${baseUrl}/add`, freelancer, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get freelancer by ID\nexport const getById = async id => {\n  try {\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get freelancer by username\nexport const getByUserName = async userName => {\n  try {\n    const response = await axios.get(`${baseUrl}/get/name/${userName}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Update freelancer details\nexport const updateFreelancer = async (id, freelancer) => {\n  try {\n    const response = await axios.put(`${baseUrl}/update/${id}`, freelancer, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// List all freelancers\nexport const listAll = async () => {\n  try {\n    const response = await axios.get(`${baseUrl}/listAll`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","baseUrl","createHeaders","addFreelancer","freelancer","response","post","headers","data","error","console","getById","id","get","getByUserName","userName","updateFreelancer","put","listAll"],"sources":["C:/Users/TEJA SAI/Desktop/Jfsd project/Portal React/online-job-portal/src/services/FreelancerService.js"],"sourcesContent":["// src/services/FreelancerService.js\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/freelancer';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Add freelancer\r\nexport const addFreelancer = async (freelancer) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/add`, freelancer, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get freelancer by ID\r\nexport const getById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get freelancer by username\r\nexport const getByUserName = async (userName) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/get/name/${userName}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update freelancer details\r\nexport const updateFreelancer = async (id, freelancer) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/update/${id}`, freelancer, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// List all freelancers\r\nexport const listAll = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/listAll`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;;AAElD;AACA,MAAMC,aAAa,GAAGA,CAAA,MAAO;EAC3B,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,UAAU,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,MAAM,EAAEG,UAAU,EAAE;MAAEG,OAAO,EAAEL,aAAa,CAAC;IAAE,CAAC,CAAC;IAC7F,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG,MAAOC,EAAE,IAAK;EACnC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,WAAWW,EAAE,EAAE,EAAE;MAAEL,OAAO,EAAEL,aAAa,CAAC;IAAE,CAAC,CAAC;IACzF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,aAAac,QAAQ,EAAE,EAAE;MAAER,OAAO,EAAEL,aAAa,CAAC;IAAE,CAAC,CAAC;IACjG,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAOJ,EAAE,EAAER,UAAU,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,WAAWW,EAAE,EAAE,EAAER,UAAU,EAAE;MAAEG,OAAO,EAAEL,aAAa,CAAC;IAAE,CAAC,CAAC;IACrG,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,UAAU,EAAE;MAAEM,OAAO,EAAEL,aAAa,CAAC;IAAE,CAAC,CAAC;IACpF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}