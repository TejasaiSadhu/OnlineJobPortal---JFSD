{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8080/bmark/job';\n\n// Helper function to create headers\nconst createHeaders = () => ({\n  'Content-Type': 'application/json; charset=utf-8'\n});\n\n// Bookmark a job\nexport const createBookmark = async bJob => {\n  try {\n    console.log('Bookmark a job method');\n    const response = await axios.post(`${baseUrl}/add`, bJob, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Delete bookmarked job by ID\nexport const deleteById = async id => {\n  try {\n    console.log('Delete Bookmarked Job By Id method');\n    const response = await axios.delete(`${baseUrl}/delete/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get bookmarked job by ID\nexport const getById = async id => {\n  try {\n    console.log('Get Bookmarked Job By Id method');\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get bookmarked jobs by skill\nexport const getBySkill = async skillName => {\n  try {\n    console.log('Get Bookmarked Jobs by Skill Name method');\n    const response = await axios.get(`${baseUrl}/get/skill/${skillName}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Get all bookmarked jobs for a freelancer\nexport const getAll = async frId => {\n  try {\n    console.log('Get Bookmarked Jobs method');\n    const response = await axios.get(`${baseUrl}/findAll/${frId}`, {\n      headers: createHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// BookmarkedJob class for TypeScript (if using)\nexport class BookmarkedJob {\n  constructor(skillId, freelancerId, jobId) {\n    this.skillId = skillId;\n    this.freelancerId = freelancerId;\n    this.jobId = jobId;\n  }\n}","map":{"version":3,"names":["axios","baseUrl","createHeaders","createBookmark","bJob","console","log","response","post","headers","data","error","deleteById","id","delete","getById","get","getBySkill","skillName","getAll","frId","BookmarkedJob","constructor","skillId","freelancerId","jobId"],"sources":["C:/Users/TEJA SAI/Desktop/Jfsd project/Portal React/online-job-portal/src/services/BookmarkedJobService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/bmark/job';\r\n\r\n// Helper function to create headers\r\nconst createHeaders = () => ({\r\n  'Content-Type': 'application/json; charset=utf-8'\r\n});\r\n\r\n// Bookmark a job\r\nexport const createBookmark = async (bJob) => {\r\n  try {\r\n    console.log('Bookmark a job method');\r\n    const response = await axios.post(`${baseUrl}/add`, bJob, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete bookmarked job by ID\r\nexport const deleteById = async (id) => {\r\n  try {\r\n    console.log('Delete Bookmarked Job By Id method');\r\n    const response = await axios.delete(`${baseUrl}/delete/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get bookmarked job by ID\r\nexport const getById = async (id) => {\r\n  try {\r\n    console.log('Get Bookmarked Job By Id method');\r\n    const response = await axios.get(`${baseUrl}/get/id/${id}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get bookmarked jobs by skill\r\nexport const getBySkill = async (skillName) => {\r\n  try {\r\n    console.log('Get Bookmarked Jobs by Skill Name method');\r\n    const response = await axios.get(`${baseUrl}/get/skill/${skillName}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all bookmarked jobs for a freelancer\r\nexport const getAll = async (frId) => {\r\n  try {\r\n    console.log('Get Bookmarked Jobs method');\r\n    const response = await axios.get(`${baseUrl}/findAll/${frId}`, { headers: createHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// BookmarkedJob class for TypeScript (if using)\r\nexport class BookmarkedJob {\r\n  constructor(skillId, freelancerId, jobId) {\r\n    this.skillId = skillId;\r\n    this.freelancerId = freelancerId;\r\n    this.jobId = jobId;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}